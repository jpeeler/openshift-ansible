---
# do any asserts here

- name: Set Service Catalog namespace
  oc_project:
    state: present
    name: "{{ openshift_service_catalog_namespace }}"
    node_selector: "{{ openshift_service_catalog_nodeselector | default(null) }}"

- name: Create temp directory for doing work in
  command: mktemp -d /tmp/openshift-logging-ansible-XXXXXX
  register: mktemp
  changed_when: False

## api server
- template:
    src: api_server.j2
    dest: "{{ mktemp.stdout }}/service_catalog_api_server.yml"
  vars:
    image: ""
    namespace: ""
    cpu_limit: none
    memory_limit: none
    cpu_requests: none
    memory_request: none
    cors_allowed_origin: localhost

- name: Set Service Catalog API Server deployment
  oc_obj:
    state: present
    namespace: "{{ openshift_service_catalog_namespace }}"
    kind: deployment
    name: apiserver
    files:
    - "{{ mktemp.stdout }}/service_catalog_api_server.yml"
    delete_after: yes

- template:
    src: api_server_service.j2
    dest: "{{ mktemp.stdout }}/service_catalog_api_service.yml"

- name: Set Service Catalog API Server service
  oc_obj:
    state: present
    namespace: "{{ openshift_service_catalog_namespace }}"
    kind: service
    name: apiserver
    files:
    - "{{ mktemp.stdout }}/service_catalog_api_service.yml"
    delete_after: yes

- template:
    src: api_server_route.j2
    dest: "{{ mktepm.stdout }}/service_catalog_api_route.yml"

- name: Set Service Catalog API Server route
  oc_obj:
    state: present
    namespace: "{{ openshift_service_catalog_namespace }}"
    kind: route
    name: apiserver
    files:
    - "{{ mktemp.stdout }}/service_catalog_api_route.yml"
    delete_after: yes

## controller manager
- template:
    src: controller_manager.j2
    dest: "{{ mktemp.stdout }}/controller_manager.yml"
  vars:
    image: ""
    replicas: 1
    node_selector: ""
    cpu_limit: none
    memory_limit: none

- name: Set Controller Manager deployment
  oc_obj:
    state: present
    namespace: "{{ openshift_service_catalog_namespace }}"
    kind: deployment
    name: controller-manager
    files:
    - "{{ mktemp.stdout }}/controller_manager.yml"
    delete_after: yes

- template:
    src: controller_manager_service.j2
    dest: "{{ mktemp.stdout }}/controller_manager_service.yml"

- name: Set Controller Manager service
  oc_obj:
    state: present
    namespace: "{{ openshift_service_catalog_namespace }}"
    kind: service
    name: controller-manager
    files:
    - "{{ mktemp.stdout }}/controller_manager_service.yml"
    delete_after: yes

- name: Delete temp directory
  file:
    name: "{{ mktemp.stdout }}"
    state: absent
  changed_when: False
